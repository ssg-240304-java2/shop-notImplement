<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.notimplement.product.model.dao.ProductMapper">

    <resultMap id="productResultMap" type="com.ohgiraffers.notimplement.product.model.domain.Product">
        <id property="sequence" column="product_seq"/>
        <result property="categoryCode" column="category_code"/>
        <result property="brand" column="product_brand"/>
        <result property="name" column="product_name"/>
        <result property="price" column="product_price"/>
        <result property="description" column="product_description"/>
        <result property="amount" column="product_amount"/>
        <result property="status" column="product_status"/>
        <result property="regDate" column="reg_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <resultMap id="categoryResultMap" type="com.ohgiraffers.notimplement.product.model.dto.CategoryResponse">
        <constructor>
            <idArg javaType="int" column="category_code"/>
            <arg javaType="string" column="category_name"/>
        </constructor>
    </resultMap>

    <select id="allProductCount" resultType="_int">
        select count(distinct product_name)
        from product;
    </select>

    <select id="soldOutProductCount" resultType="_int">
        select count(*)
        from product
        where product_amount = 0;
    </select>

    <select id="findAllProduct" resultMap="productResultMap">
        select
        product_seq,
        category_code,
        product_brand,
        product_name,
        product_price,
        product_description,
        product_amount,
        product_status,
        reg_date,
        update_date
        from product
        order by product_seq desc;
    </select>

    <insert id="save">
        insert into product
        (
        category_code,
        product_brand,
        product_name,
        product_price,
        product_description,
        product_amount,
        product_status,
        reg_date,
        update_date
        )
        values
        (
        #{categoryCode},
        #{brand},
        #{name},
        #{price},
        #{description},
        #{amount},
        #{status},
        #{regDate},
        #{updateDate}
        )
    </insert>

    <update id="update" parameterType="long">
        update product
        set
        where product_seq = #{productId}
    </update>

    <delete id="delete" parameterType="long">
        delete
        from product
        where product_seq = #{productId}
    </delete>

    <select id="findCategories" resultMap="categoryResultMap">
        select
        category_code,
        category_name
        from category
        where ref_category_code is not null
    </select>
</mapper>